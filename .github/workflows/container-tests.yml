name: slim/container-tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-test-containers:
    name: "Build and test containers"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v4.2.2

      - name: Setup Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 20.8.1

      - name: Build and run containers using docker compose
        run: docker compose up -d

      - name: Wait for app and arc to be healthy
        run: |
          for i in {1..30}; do
            app_id=$(docker compose ps -q app)
            arc_id=$(docker compose ps -q arc)
            echo "app_id: $app_id, arc_id: $arc_id"
            app_status=$(docker inspect --format='{{.State.Health.Status}}' $app_id 2>/dev/null || echo "none")
            arc_status=$(docker inspect --format='{{.State.Health.Status}}' $arc_id 2>/dev/null || echo "none")
            echo "app: $app_status, arc: $arc_status"
            if [ "$app_status" = "healthy" ] && [ "$arc_status" = "healthy" ]; then
              exit 0
            fi
            sleep 10
          done
          echo "Services did not become healthy in time."
          docker compose ps
          echo "--- arc logs ---"
          docker compose logs arc || true
          exit 1

      - name: Debug arc health endpoint
        run: |
          echo "--- arc health endpoint response ---"
          docker compose exec arc curl -i http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs/studies || true

      - name: Test web page
        run: |
          curl -sI http://localhost:8008/ | grep -o '200 OK'
          curl -s http://localhost:8008/ | grep -o '<title>Slim</title>'

      - name: Test DICOMweb service
        run: |
          sleep 20
          curl -sI http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs/studies | grep -o '204 No Content'
